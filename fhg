@using Microsoft.Fast.Components.FluentUI

<EditForm class="form-signin mb-4" Model="@_credential" OnValidSubmit="@Authenticate">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="user-name">User Name</label>
        <FluentTextField Class="form-control" Id="user-name" Placeholder="Enter username"
            Value="@_credential.UserName"
            ValueChanged="@((string val) => _credential.UserName = val)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <FluentTextField Type="password" Class="form-control" Id="password" Placeholder="Password"
            Value="@_credential.Password"
            ValueChanged="@((string val) => _credential.Password = val)"
            OnKeyDown="@HandleKeyDown" />
    </div>

    <ValidationSummary />

    <div class="form-group">
        <FluentButton Type="submit" Id="login" Appearance="Primary">Login</FluentButton>
    </div>
</EditForm>

@code {
    private CredentialModel _credential = new();

    private async Task Authenticate()
    {
        Console.WriteLine($"User: {_credential.UserName}, Password: {_credential.Password}");
        // Your authentication logic
    }

    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            // Ensure the latest password is captured before submission
            StateHasChanged();
        }
    }
}
